name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - '*'

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm ci

    - name: Save dependencies
      uses: actions/upload-artifact@v2
      with:
        name: dependencies
        path: node_modules
  
  parallel-jobs:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Run npm audit
          run: npm audit --json > npm_audit.json
    
        - name: Verify audit results on pull requests
          uses: actions/github-script@v6
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const fs = require('fs');
              const auditResults = JSON.parse(fs.readFileSync('npm_audit.json', 'utf8'));
              
              const vulnerabilities = auditResults.metadata.vulnerabilities.total;
              if (vulnerabilities === 0) {
                console.log('No vulnerabilities found.');
              } else {
                console.error(`Vulnerabilities found: ${vulnerabilities}`);
                if (context.payload.pull_request) {
                  const pullRequestNumber = context.payload.pull_request.number;
                  const pullRequestURL = context.payload.pull_request.html_url;
                  const commentBody = `Found ${vulnerabilities} vulnerabilities in this pull request. Please address them.`;
                  github.issues.createComment({
                    issue_number: pullRequestNumber,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: commentBody
                  });
                }
                process.exit(1);
              }
          - name: Components testing
            command: npm run test:components
          - name: Server unit testing
            command: npm run test:unit:server
          - name: Build
            command: npm run build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download dependencies
      uses: actions/download-artifact@v2
      with:
        name: dependencies

    - name: Run ${{ matrix.name }}
      run: ${{ matrix.command }}